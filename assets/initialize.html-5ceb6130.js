import{_ as n,p as a,q as s,a1 as e}from"./framework-96b046e1.js";const t={},o=e(`<h1 id="initialize" tabindex="-1"><a class="header-anchor" href="#initialize" aria-hidden="true">#</a> initialize</h1><p><code>initialize</code> is a basic command allowing a solution to be created from scratch. The <code>solution</code> file can be created with or without scaning for projects.</p><h2 id="command-execution" tabindex="-1"><a class="header-anchor" href="#command-execution" aria-hidden="true">#</a> Command execution</h2><h4 id="regular-form" tabindex="-1"><a class="header-anchor" href="#regular-form" aria-hidden="true">#</a> regular form</h4><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>solution:initialize
</code></pre></div><h4 id="short-form" tabindex="-1"><a class="header-anchor" href="#short-form" aria-hidden="true">#</a> short form</h4><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>s:init
</code></pre></div><p>The result of this command execution will be a <code>orchestra.json</code> file at the <code>working-dir</code> path defined (default value is <code>.</code>).</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Orchestra Solution&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;projects&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="command-options" tabindex="-1"><a class="header-anchor" href="#command-options" aria-hidden="true">#</a> Command options</h2><h3 id="solution-name" tabindex="-1"><a class="header-anchor" href="#solution-name" aria-hidden="true">#</a> <code>solution-name</code></h3><p>Passing <code>--solution-name</code> option, the <code>name</code> attribute can be customized.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>solution:initialize --solution-name<span class="token operator">=</span><span class="token string">&quot;My solution name&quot;</span>
</code></pre></div><h4 id="result" tabindex="-1"><a class="header-anchor" href="#result" aria-hidden="true">#</a> result</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;My solution name&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;projects&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="project-scan" tabindex="-1"><a class="header-anchor" href="#project-scan" aria-hidden="true">#</a> <code>project-scan</code></h3><p>When creating a solution on an existing application project, <strong>orchestra</strong> can scan for <strong>projects</strong> and add the to the projects list</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>solution:initialize --project-scan
</code></pre></div><h4 id="result-1" tabindex="-1"><a class="header-anchor" href="#result-1" aria-hidden="true">#</a> result</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Orchestra Solution&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;projects&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;orchestra-example\\/business-logic&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.\\/businessLogic&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;orchestra-example\\/entities&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.\\/entities&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;orchestra-example\\/web-app&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.\\/webApp&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="project-scan-depth" tabindex="-1"><a class="header-anchor" href="#project-scan-depth" aria-hidden="true">#</a> <code>project-scan-depth</code></h3><p>When requesting orchestra to scan for projects, it is possible to specify the level of depth. Default value is <code>0</code>, and it means to check all the folders at the <code>working-dir</code> level trying to find <code>composer.json</code> files.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>solution:initialize --project-scan --project-scan-depth<span class="token operator">=</span><span class="token number">1</span> 
</code></pre></div>`,23),i=[o];function p(c,r){return a(),s("div",null,i)}const u=n(t,[["render",p],["__file","initialize.html.vue"]]);export{u as default};
